{"version":3,"sources":["Crypto.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","Crypto","currencyRates","useState","assets","setAssets","currency","setCurrency","useEffect","get","then","response","data","catch","error","console","log","currencyFormatter","Intl","NumberFormat","style","rateConveter","priceUsd","rate","format","parseInt","Option","Select","showSearch","width","placeholder","optionFilterProp","onChange","value","onFocus","onBlur","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","length","map","gutter","xs","sm","md","lg","className","span","fontSize","rank","src","symbol","alt","height","href","explorer","textDecoration","name","color","changePercent24Hr","CaretDownOutlined","slice","CaretUpOutlined","supply","maxSupply","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afcd06f2.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Card, Row, Col, Avatar, Image, Select } from 'antd';\r\nimport { CaretUpOutlined, CaretDownOutlined, LoadingOutlined } from '@ant-design/icons'\r\nimport 'antd/dist/antd.css';\r\n\r\nconst axios = require('axios');\r\n\r\nconst Crypto = () => {\r\nconst currencyRates = {\r\n    AED: 4.371213,\r\n    AFN: 92.291184,\r\n    ALL: 123.947311,\r\n    AMD: 635.189996,\r\n    ANG: 2.1331,\r\n    AOA: 747.545226,\r\n    ARS: 109.689299,\r\n    AUD: 1.561375,\r\n    AWG: 2.142144,\r\n    AZN: 2.027861,\r\n    BAM: 1.95583,\r\n    BBD: 2.3995,\r\n    BDT: 100.620099,\r\n    BGN: 1.955144,\r\n    BHD: 0.448654,\r\n    BIF: 2339.102223,\r\n    BMD: 1.19008,\r\n    BND: 1.5941,\r\n    BOB: 8.2058,\r\n    BRL: 6.774654,\r\n    BSD: 1.1884,\r\n    BTC: 0.000019998428,\r\n    BTN: 88.786199,\r\n    BWP: 13.0091,\r\n    BYN: 3.1359,\r\n    BYR: 23325.567835,\r\n    BZD: 2.3954,\r\n    CAD: 1.491111,\r\n    CDF: 2375.400094,\r\n    CHF: 1.100646,\r\n    CLF: 0.030794,\r\n    CLP: 849.68741,\r\n    CNY: 7.798643,\r\n    COP: 4355.097729,\r\n    CRC: 727.839995,\r\n    CUC: 1.19008,\r\n    CUP: 31.53712,\r\n    CVE: 111.277117,\r\n    CZK: 26.013011,\r\n    DJF: 211.559999,\r\n    DKK: 7.43741,\r\n    DOP: 67.751722,\r\n    DZD: 157.809229,\r\n    EGP: 18.692,\r\n    ERN: 17.850707,\r\n    ETB: 49.210274,\r\n    EUR: 1,\r\n    FJD: 2.460788,\r\n    FKP: 0.867007,\r\n    GBP: 0.868133,\r\n    GEL: 4.082439,\r\n    GGP: 0.867007,\r\n    GHS: 6.879127,\r\n    GIP: 0.867007,\r\n    GMD: 60.936681,\r\n    GNF: 11900.800339,\r\n    GTQ: 9.1713,\r\n    GYD: 248.399998,\r\n    HKD: 9.25609,\r\n    HNL: 28.698826,\r\n    HRK: 7.582123,\r\n    HTG: 95.881999,\r\n    HUF: 357.538159,\r\n    IDR: 17392.900069,\r\n    ILS: 3.916423,\r\n    IMP: 0.867007,\r\n    INR: 88.928775,\r\n    IQD: 1740.491988,\r\n    IRR: 50108.318466,\r\n    ISK: 151.676154,\r\n    JEP: 0.867007,\r\n    JMD: 175.309999,\r\n    JOD: 0.843814,\r\n    JPY: 130.50463,\r\n    KES: 127.70011,\r\n    KGS: 100.902484,\r\n    KHR: 4813.873983,\r\n    KMF: 498.410018,\r\n    KPW: 1071.050762,\r\n    KRW: 1336.531692,\r\n    KWD: 0.359024,\r\n    KYD: 0.9903,\r\n    KZT: 515.049996,\r\n    LAK: 11204.603536,\r\n    LBP: 1818.442642,\r\n    LKR: 238.270198,\r\n    LRD: 205.467765,\r\n    LSL: 17.381165,\r\n    LTL: 3.513997,\r\n    LVL: 0.719868,\r\n    LYD: 5.373258,\r\n    MAD: 10.658956,\r\n    MDL: 21.272,\r\n    MGA: 4516.353981,\r\n    MKD: 61.615,\r\n    MMK: 1675.615988,\r\n    MNT: 3389.608521,\r\n    MOP: 9.5199,\r\n    MRO: 424.858352,\r\n    MUR: 48.72,\r\n    MVR: 18.387186,\r\n    MWK: 935.403284,\r\n    MXN: 23.994993,\r\n    MYR: 4.921027,\r\n    MZN: 76.082263,\r\n    NAD: 17.381164,\r\n    NGN: 453.420886,\r\n    NIO: 41.736554,\r\n    NOK: 10.122285,\r\n    NPR: 142.057999,\r\n    NZD: 1.692498,\r\n    OMR: 0.45804,\r\n    PAB: 1.1884,\r\n    PEN: 4.31583,\r\n    PGK: 4.202218,\r\n    PHP: 57.77883,\r\n    PKR: 181.933525,\r\n    PLN: 4.544261,\r\n    PYG: 7426.199948,\r\n    QAR: 4.333127,\r\n    RON: 4.92158,\r\n    RSD: 117.574999,\r\n    RUB: 92.124536,\r\n    RWF: 1163.303192,\r\n    SAR: 4.464019,\r\n    SBD: 9.501977,\r\n    SCR: 24.069413,\r\n    SDG: 454.019894,\r\n    SEK: 10.162587,\r\n    SGD: 1.59904,\r\n    SHP: 0.867007,\r\n    SLL: 12167.378237,\r\n    SOS: 695.007118,\r\n    SRD: 16.844438,\r\n    STD: 24520.53221,\r\n    SVC: 10.399,\r\n    SYP: 1496.739844,\r\n    SZL: 17.381163,\r\n    THB: 37.440356,\r\n    TJS: 13.5499,\r\n    TMT: 4.16528,\r\n    TND: 3.293551,\r\n    TOP: 2.719378,\r\n    TRY: 9.713478,\r\n    TTD: 8.0529,\r\n    TWD: 33.93585,\r\n    TZS: 2755.849981,\r\n    UAH: 33.1754,\r\n    UGX: 4337.599969,\r\n    USD: 1.19008,\r\n    UYU: 52.342,\r\n    UZS: 12468.46847,\r\n    VEF: 254475069202.9704,\r\n    VND: 27411.999806,\r\n    VUV: 130.267232,\r\n    WST: 3.010675,\r\n    XAF: 655.956995,\r\n    XAG: 0.047121,\r\n    XAU: 0.000682,\r\n    XCD: 3.216251,\r\n    XDR: 0.835,\r\n    XOF: 656.333402,\r\n    XPF: 119.900992,\r\n    YER: 297.817951,\r\n    ZAR: 17.399077,\r\n    ZMK: 10712.152296,\r\n    ZMW: 26.3404,\r\n    ZWL: 383.206152\r\n} // fetched 1618125494\r\nconst [assets, setAssets] = useState()\r\nconst [currency, setCurrency] = useState(\"USD\")\r\nconst [priceUsd, setPriceUsd] = useState(10.000)\r\n\r\n\r\n    useEffect(() => {\r\n            axios.get('https://api.coincap.io/v2/assets')\r\n            .then(function (response) {\r\n                setAssets(response.data.data)\r\n                //console.log(response.data.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }, [])\r\n\r\n    const currencyFormatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: currency\r\n    });\r\n\r\n    const rateConveter = (priceUsd, rate) => {\r\n        return currencyFormatter.format(parseInt(priceUsd) * rate)\r\n        // since my rates are from EURO, I first need to convert to EUR then to the new rate\r\n    }\r\n\r\n    const { Option } = Select;\r\n\r\n    function onChange(value) {\r\n        setCurrency(value)\r\n        console.log(currency)\r\n    }\r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n    console.log()\r\n    const span = 4; // just for development, might keep if\r\n    return (\r\n        <>\r\n            <Select\r\n                showSearch\r\n                style={{ width: 80 }}\r\n                placeholder=\"USD\"\r\n                optionFilterProp=\"children\"\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\r\n                <Option value=\"USD\">USD</Option>\r\n                <Option value=\"EUR\">EUR</Option>\r\n                <Option value=\"NOK\">NOK</Option>\r\n                <Option value=\"GBP\">GBP</Option>\r\n                <Option value=\"JPY\">JPY</Option>\r\n                <Option value=\"DKK\">DKK</Option>\r\n                <Option value=\"BGN\">BGN</Option>\r\n                <Option value=\"CZK\">NOK</Option>\r\n                <Option value=\"SEK\">SEK</Option>\r\n                <Option value=\"ISK\">ISK</Option>\r\n                <Option value=\"AUD\">AUD</Option>\r\n            </Select>\r\n\r\n            {assets && assets.length !== 0 ? assets.map((assets) => (\r\n                    <Card key={assets.id}>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col className=\"gutter-row\" span={span} style={{fontSize: 12}}>{assets.rank}.</Col>\r\n                            <Col className=\"gutter-row\" span={span}>\r\n                                {/*<LoadingOutlined /> Replace this with avatar img if link cant fetch a photo, fallback*/}\r\n                                <Avatar\r\n                                    src={<Image src={`https://static.coincap.io/assets/icons/${assets.symbol.toLowerCase()}@2x.png`}\r\n                                                alt={'symbol'}\r\n                                                height={24} width={24}\r\n                                    />}/>\r\n                            </Col>\r\n                            <Col className=\"gutter-row\" span={span} style={{fontSize: 14}}>\r\n                                <a href={assets.explorer} style={{textDecoration: \"underline\"}}>{assets.name}</a>\r\n                                <div style={{fontSize: \"11px\", color: \"#5e5e5e\"}}>{assets.symbol}</div>\r\n                            </Col>\r\n                            <Col className=\"gutter-row\" span={span}>\r\n                                {currencyFormatter.format(assets.priceUsd)}\r\n                                <br/>\r\n                                {rateConveter(assets.priceUsd, currencyRates.NOK)}\r\n                                <br/>\r\n                                {assets.changePercent24Hr < 0 ?\r\n                                    <div style={{color: \"red\"}}><CaretDownOutlined />{assets.changePercent24Hr.slice(0, -12) + \"%\"}</div> :\r\n                                   <div style={{color: \"green\"}}><CaretUpOutlined />{assets.changePercent24Hr.slice(0, -12) + \"%\"}</div>}\r\n                            </Col>\r\n                            <Col className=\"gutter-row\" span={span}>\r\n                                {new Intl.NumberFormat('en-US').format(assets.supply) + \" / \"}\r\n                                {new Intl.NumberFormat('en-US').format(assets.maxSupply)}\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n            )): \"Loading..\" }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Crypto;\r\n\r\n// https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml for currency rates, CORS policy is a headache\r\n","import './App.css';\r\nimport Crypto from \"./Crypto\";\r\n\r\nfunction App() {\r\n  return (\r\n  <>\r\n    <Crypto/>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}